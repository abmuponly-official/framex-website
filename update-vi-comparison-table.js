#!/usr/bin/env node

/**
 * Update Vietnamese Comparison Table Content
 * Replaces only the Vietnamese version with new content and styling
 * Date: 2025-09-28
 */

const fs = require('fs').promises;

class ViTableUpdater {
    constructor() {
        this.viTableHTML = `                <table class="comparison-table">
                    <thead>
                        <tr>
                            <th scope="col" data-lang="compare-feature"><strong>T√≠nh nƒÉng</strong></th>
                            <th scope="col"><strong>FrameX STARTER</strong></th>
                            <th scope="col" class="featured"><strong>FrameX SMART</strong></th>
                            <th scope="col"><strong>FrameX PREMIUM</strong></th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td scope="row" data-lang="compare-area"><strong>Di·ªán t√≠ch ph√π h·ª£p</strong></td>
                            <td>< 150 m¬≤ (m·ªôt t·∫ßng)<br>ho·∫∑c 50 m¬≤/t·∫ßng (2‚Äì3 t·∫ßng)</td>
                            <td class="featured">< 225 m¬≤ (m·ªôt t·∫ßng)<br>ho·∫∑c 75 m¬≤/t·∫ßng (2‚Äì3 t·∫ßng)</td>
                            <td>> 300 m¬≤ s√†n<br>ho·∫∑c > 150 m¬≤/t·∫ßng (2 t·∫ßng)</td>
                        </tr>
                        <tr>
                            <td scope="row" data-lang="compare-structure"><strong>K·∫øt c·∫•u th√©p</strong></td>
                            <td>Ti√™u chu·∫©n</td>
                            <td class="featured">N√¢ng cao, c√≥ th·ªÉ t√πy bi·∫øn theo y√™u c·∫ßu</td>
                            <td>Cao c·∫•p, thi·∫øt k·∫ø ri√™ng ho√†n to√†n</td>
                        </tr>
                        <tr>
                            <td scope="row" data-lang="compare-waterproof"><strong>Ch·ªëng th·∫•m</strong></td>
                            <td>C∆° b·∫£n</td>
                            <td class="featured">C∆° b·∫£n</td>
                            <td>N√¢ng cao</td>
                        </tr>
                        <tr>
                            <td scope="row" data-lang="compare-insulation"><strong>C√°ch nhi·ªát</strong></td>
                            <td>C∆° b·∫£n</td>
                            <td class="featured">C∆° b·∫£n</td>
                            <td>N√¢ng cao</td>
                        </tr>
                        <tr>
                            <td scope="row" data-lang="compare-smart"><strong>Ti·ªán √≠ch th√¥ng minh (Smart Home)</strong></td>
                            <td>‚Äì</td>
                            <td class="featured">C∆° b·∫£n<br>(ch·ªëng tr·ªôm, b√°o ch√°y, camera, internet)</td>
                            <td>N√¢ng cao<br>t√πy ch·ªânh theo y√™u c·∫ßu ri√™ng</td>
                        </tr>
                        <tr>
                            <td scope="row" data-lang="compare-fireproof"><strong>Ch·ªëng ch√°y</strong></td>
                            <td>‚Äì</td>
                            <td class="featured">‚Äì</td>
                            <td>K·∫øt c·∫•u ch·ªëng ch√°y ƒë·∫ßy ƒë·ªß</td>
                        </tr>
                        <tr>
                            <td scope="row" data-lang="compare-artistic"><strong>Chi ti·∫øt s·∫Øt m·ªπ thu·∫≠t</strong><br>(c·∫ßu thang, lan can, chi ti·∫øt ƒë·∫∑c bi·ªát)</td>
                            <td>C·∫ßu thang ƒë∆°n gi·∫£n</td>
                            <td class="featured">C·∫ßu thang ƒë∆°n gi·∫£n</td>
                            <td>C·∫ßu thang + lan can + c√°c chi ti·∫øt ƒë·∫∑c bi·ªát</td>
                        </tr>
                        <tr>
                            <td scope="row" data-lang="compare-warranty"><strong>B·∫£o h√†nh</strong></td>
                            <td>15 nƒÉm</td>
                            <td class="featured">15 nƒÉm</td>
                            <td>20 nƒÉm</td>
                        </tr>
                        <tr>
                            <td scope="row" data-lang="compare-target"><strong>Kh√°ch h√†ng m·ª•c ti√™u</strong></td>
                            <td>Nh√† ph·ªë nh·ªè, c√¥ng tr√¨nh ph·ªï th√¥ng</td>
                            <td class="featured">Villa nh·ªè, c·∫ßn ti·ªán √≠ch & c√° nh√¢n h√≥a</td>
                            <td>Bi·ªát th·ª± l·ªõn, c√¥ng tr√¨nh ƒë·∫∑c bi·ªát</td>
                        </tr>
                    </tbody>
                </table>`;

        this.viData = {
            "Di·ªán t√≠ch ph√π h·ª£p": {
                starter: "< 150 m¬≤ (m·ªôt t·∫ßng) ho·∫∑c 50 m¬≤/t·∫ßng (2‚Äì3 t·∫ßng)",
                smart: "< 225 m¬≤ (m·ªôt t·∫ßng) ho·∫∑c 75 m¬≤/t·∫ßng (2‚Äì3 t·∫ßng)",
                premium: "> 300 m¬≤ s√†n ho·∫∑c > 150 m¬≤/t·∫ßng (2 t·∫ßng)"
            },
            "K·∫øt c·∫•u th√©p": {
                starter: "Ti√™u chu·∫©n",
                smart: "N√¢ng cao, c√≥ th·ªÉ t√πy bi·∫øn theo y√™u c·∫ßu",
                premium: "Cao c·∫•p, thi·∫øt k·∫ø ri√™ng ho√†n to√†n"
            },
            "Ch·ªëng th·∫•m": {
                starter: "C∆° b·∫£n",
                smart: "C∆° b·∫£n",
                premium: "N√¢ng cao"
            },
            "C√°ch nhi·ªát": {
                starter: "C∆° b·∫£n",
                smart: "C∆° b·∫£n",
                premium: "N√¢ng cao"
            },
            "Ti·ªán √≠ch th√¥ng minh (Smart Home)": {
                starter: "‚Äì",
                smart: "C∆° b·∫£n (ch·ªëng tr·ªôm, b√°o ch√°y, camera, internet)",
                premium: "N√¢ng cao t√πy ch·ªânh theo y√™u c·∫ßu ri√™ng"
            },
            "Ch·ªëng ch√°y": {
                starter: "‚Äì",
                smart: "‚Äì",
                premium: "K·∫øt c·∫•u ch·ªëng ch√°y ƒë·∫ßy ƒë·ªß"
            },
            "Chi ti·∫øt s·∫Øt m·ªπ thu·∫≠t": {
                starter: "C·∫ßu thang ƒë∆°n gi·∫£n",
                smart: "C·∫ßu thang ƒë∆°n gi·∫£n",
                premium: "C·∫ßu thang + lan can + c√°c chi ti·∫øt ƒë·∫∑c bi·ªát"
            },
            "B·∫£o h√†nh": {
                starter: "15 nƒÉm",
                smart: "15 nƒÉm",
                premium: "20 nƒÉm"
            },
            "Kh√°ch h√†ng m·ª•c ti√™u": {
                starter: "Nh√† ph·ªë nh·ªè, c√¥ng tr√¨nh ph·ªï th√¥ng",
                smart: "Villa nh·ªè, c·∫ßn ti·ªán √≠ch & c√° nh√¢n h√≥a",
                premium: "Bi·ªát th·ª± l·ªõn, c√¥ng tr√¨nh ƒë·∫∑c bi·ªát"
            }
        };
    }

    async updateProductsPage() {
        try {
            console.log('üìù Updating Vietnamese comparison table...');
            
            let content = await fs.readFile('products.html', 'utf8');
            
            // Find and replace the comparison table
            const tableStart = content.indexOf('<table class="comparison-table">');
            const tableEnd = content.indexOf('</table>', tableStart) + 8;
            
            if (tableStart === -1) {
                throw new Error('Comparison table not found');
            }
            
            // Replace with new table HTML
            content = content.substring(0, tableStart) + this.viTableHTML + content.substring(tableEnd);
            
            // Add CSS link if not present
            if (!content.includes('comparison-table-clean.css')) {
                content = content.replace(
                    '</head>',
                    '    <link rel="stylesheet" href="css/comparison-table-clean.css">\n    </head>'
                );
            }
            
            await fs.writeFile('products.html', content, 'utf8');
            console.log('‚úÖ Updated products.html with new Vietnamese table');
            
        } catch (error) {
            console.error('‚ùå Error:', error.message);
        }
    }

    async saveDataModel() {
        await fs.writeFile(
            'vi-comparison-table-data.json',
            JSON.stringify(this.viData, null, 2),
            'utf8'
        );
        console.log('üìä Created vi-comparison-table-data.json');
    }

    async run() {
        await this.updateProductsPage();
        await this.saveDataModel();
        console.log('üé® Vietnamese table update complete!');
    }
}

// Execute
new ViTableUpdater().run().catch(console.error);